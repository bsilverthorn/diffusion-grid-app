name: 'Deploy'
on: 
  push:
    branches: [ "main" ]
  workflow_dispatch:
permissions:
  contents: read
  id-token: write
concurrency: deploy
env:
  TF_WORKSPACE: "${{ secrets.TF_WORKSPACE }}"
  TF_CLOUD_ORGANIZATION: "${{ secrets.TF_CLOUD_ORGANIZATION }}"
  TF_VAR_banana_api_key: "${{ secrets.BANANA_API_KEY }}"
  TF_VAR_banana_model_key: "${{ secrets.BANANA_MODEL_KEY }}"
  SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
  TF_VAR_sentry_organization_slug: "${{ secrets.SENTRY_ORGANIZATION_SLUG }}"
  TF_VAR_sentry_team_slug: "${{ secrets.SENTRY_TEAM_SLUG }}"
jobs:
  deploy-app:
    name: 'Deploy'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - uses: actions/setup-node@v3
      with:
        node-version-file: '.tool-versions'
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::452805738518:role/terraform
        aws-region: us-east-1
    - run: npm install
      working-directory: ./frontend
    - run: npm run build
      working-directory: ./frontend
    - run: terraform init
      working-directory: ./infrastructure
    - name: terraform apply
      run: terraform apply -auto-approve -input=false
      working-directory: ./infrastructure
